<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
	<!-- 不需要做安全检查的资源请求，其中**代表可以跨越目录，*不可以跨越目录。 -->
	<sec:http pattern="/resources/**/*.*" security="none" />
	<sec:http pattern="/info/index/*.*" security="none" />
	<sec:http pattern="/upload/download.do" security="none" />
	<sec:http pattern="/upload/downloadLink.do" security="none" />
	<sec:http pattern="/directory/**/*.*" security="none" />
	<sec:http pattern="/views/randomImage.jsp*" security="none" />
	<sec:http pattern="/views/index.jsp" security="none" />
	
	<!-- 登录页面和忘记密码页面不过滤 -->
	<sec:http pattern="/login/login.do" security="none" />
	<sec:http pattern="/login/redirect.do" security="none" />
	<sec:http pattern="/login/isReachMaxSessions.do" security="none" />
	<sec:http pattern="/views/forgotpassword.jsp" security="none" />
	<sec:http pattern="/views/sessionTimeout.jsp" security="none" />
	<!-- session-fixation-protection="none"，解决CAS注销后，不能注销本地应用的问题，但配置上后报错 -->
	<sec:http auto-config="false" entry-point-ref="casEntryPoint" servlet-api-provision="true">
		<sec:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
		<sec:custom-filter ref="casFilter" before="FORM_LOGIN_FILTER" />
		<sec:custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
		<sec:custom-filter ref="cap4jSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
		<sec:custom-filter ref="cap4jSessionFilter" before="CONCURRENT_SESSION_FILTER" />
	</sec:http>
	<bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl"
			value="${cas.login}" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>
	<bean id="serviceProperties"
		class="org.springframework.security.cas.ServiceProperties">
		<property name="service"
			value="${cas.service}" />
		<property name="sendRenew" value="false" />
	</bean>
	<!-- 注销服务器端 -->
	<bean id="requestSingleLogoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="${cas.logout}" />
		<constructor-arg>
			<bean
				class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</constructor-arg>
		<property name="filterProcessesUrl" value="/j_spring_cas_security_logout" />
	</bean>
	<bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler" />
		<property name="sessionAuthenticationStrategy" ref="sas" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
	</bean>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="casAuthenticationProvider" />
	</sec:authentication-manager>

	<bean id="casAuthenticationUserDetailsService"
		class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
		<property name="userDetailsService">
			<ref bean="userDetailsManager" />
		</property>
	</bean>

	<bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="authenticationUserDetailsService"
			ref="casAuthenticationUserDetailsService" />
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean
				class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator">
				<constructor-arg index="0"
					value="${cas.ticket}" />
			</bean>
			<!-- <bean id="casProxyTicketValidator" class="com.cib.cap.cas.common.validate.CasProxyTicketValidatorExt">
				<property name="casValidate" value="http://10.7.131.7:9001/CASServer/proxyValidate" />
				<property name="serviceProperties" ref="serviceProperties" />
			</bean> -->
		</property>
		<property name="key" value="an_id_for_this_auth_provider_only" />
	</bean>
	<!-- 注销客户端 -->
	<bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />
	
	<bean id="userDetailsManager" class="com.cib.cap4j.core.security.Cap4jUserDetailsService">
		<property name="userDetailsDao" ref="cap4jCfnUserDetailsDaoImpl"/>
	</bean>
	<bean id="cap4jSecurityInterceptor" class="com.cib.cap4j.core.security.Cap4jFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="cap4jAccessDecisionManager" />
		<property name="securityMetadataSource" ref="cap4jSecurityMetadataSource" />
	</bean>
	<bean id="cap4jAccessDecisionManager" class="com.cib.cap4j.core.security.Cap4jAccessDecisionManager" />
	<bean id="cap4jSecurityMetadataSource"
		class="com.cib.cap4j.core.security.Cap4jInvocationSecurityMetadataSourceService">
		<constructor-arg name="loginCheck" value="true"/>
		<constructor-arg name="urlCheck" value="true"/>
		<constructor-arg name="cap4jSessionService" ref="cap4jSessionServiceImpl"/>
	</bean>
	
	<bean id="cap4jSessionFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<property name="sessionRegistry" ref="sessionRegistry" />
		<property name="expiredUrl" value="/login/login.do?error=true" />
	</bean>
	<bean id="sessionRegistry"
		class="com.cib.cap4j.core.security.session.Cap4jSessionRegistryImpl">
		<property name="sessionService" ref="cap4jSessionServiceImpl"/>
	</bean>
	<bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login/login.do?error=true" />
	</bean>
	<bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<constructor-arg>
			<list>
  				<bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
    				<constructor-arg ref="sessionRegistry"/>
    				<property name="maximumSessions" value="#{cap4jSessionServiceImpl.getAllowedMaxSession()}" />
    				<property name="exceptionIfMaximumExceeded" value="#{cap4jSessionServiceImpl.isRejectLoginMaxSession()}"/>
  				</bean>
  				<bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>
  				<bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
    				<constructor-arg ref="sessionRegistry"/>
    			</bean>
			</list>
		</constructor-arg>
	</bean>
	<bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/login/main.do"/>
	</bean>
</beans>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <bean id="cap4jWebInvocationPrivilegeEvaluator" class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
        <constructor-arg name="securityInterceptor" ref="cap4jSecurityInterceptor" />
    </bean>
	<!-- 不需要做安全检查的资源请求，其中**代表可以跨越目录，*不可以跨越目录。 -->
	<sec:http pattern="/resources/**/*.*" security="none" />
	<sec:http pattern="/info/index/*.*" security="none" />
	<sec:http pattern="/upload/download.do" security="none" />
	<sec:http pattern="/upload/downloadLink.do" security="none" />
	<sec:http pattern="/directory/**/*.*" security="none" />
	<sec:http pattern="/views/randomImage.jsp*" security="none" />
	<sec:http pattern="/views/index.jsp" security="none" />
	<sec:http pattern="/index.jsp" security="none" />
	
	<!-- 登录页面和忘记密码页面不过滤 -->
	<sec:http pattern="/login/login.do" security="none" />
	<sec:http pattern="/login/redirect.do" security="none" />
	<sec:http pattern="/login/isReachMaxSessions.do" security="none" />
	<sec:http pattern="/views/forgotpassword.jsp" security="none" />
	<sec:http pattern="/views/sessionTimeout.jsp" security="none" />
	<sec:http use-expressions="true" auto-config="true" access-denied-page="/views/accessDenied.jsp">
		
		<sec:form-login login-page="/login/login.do"
			authentication-failure-url="/login/login.do?error=true"
			default-target-url="/login/main.do"/>
		<sec:logout invalidate-session="true" logout-success-url="/views/index.jsp" />

		<sec:session-management invalid-session-url="/views/sessionTimeout.jsp" />
		<sec:custom-filter ref="cap4jLoginProcessingFilter" before="FORM_LOGIN_FILTER" />
		<sec:custom-filter ref="cap4jSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
		<sec:custom-filter ref="cap4jSessionFilter" before="CONCURRENT_SESSION_FILTER" />
	</sec:http>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="cap4jAuthenticationProvider" />
	</sec:authentication-manager>
	
	<bean
		class="org.springframework.security.authentication.event.LoggerListener" />

	
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<bean id="cap4jAuthenticationProvider" class="com.cib.cap4j.core.security.Cap4jAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsManager" />
		<property name="passwordEncoder" ref="passwordEncoder" />
		
	</bean>
	<bean id="cap4jLoginProcessingFilter" class="com.cib.cap4j.core.security.Cap4jLoginProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler" />
		<property name="sessionAuthenticationStrategy" ref="sas" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
	</bean>
	<!-- 用户详细信息管理 -->
	<bean id="userDetailsManager" class="com.cib.cap4j.core.security.Cap4jUserDetailsService">
		<property name="userDetailsDao" ref="cap4jCfnUserDetailsDaoImpl"/>
	</bean>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性。 -->
	<bean id="cap4jSecurityInterceptor"
		class="com.cib.cap4j.core.security.Cap4jFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="cap4jAccessDecisionManager" />
		<property name="securityMetadataSource" ref="cap4jSecurityMetadataSource" />
	</bean>
	<bean id="cap4jAccessDecisionManager" class="com.cib.cap4j.core.security.Cap4jAccessDecisionManager" />
	<bean id="cap4jSecurityMetadataSource"
		class="com.cib.cap4j.core.security.Cap4jInvocationSecurityMetadataSourceService">
		<constructor-arg name="loginCheck" value="true"/>
		<constructor-arg name="urlCheck" value="true"/>
		<constructor-arg name="cap4jSessionService" ref="cap4jSessionServiceImpl"/>
	</bean>
	<bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login/login.do?error=true" />
	</bean>

	<!-- 
	<bean id="cap4jSessionFilter"
		class="com.cib.cap4j.core.security.session.Cap4jConcurrentSessionFilter">
	 -->
	 <bean id="cap4jSessionFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<property name="sessionRegistry" ref="sessionRegistry" />
		<property name="expiredUrl" value="/login/login.do?error=true" />
	</bean>
	<!--
	<bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
	-->
	<bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<constructor-arg>
			<list>
  				<bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
    				<constructor-arg ref="sessionRegistry"/>
    				<property name="maximumSessions" value="#{cap4jSessionServiceImpl.getAllowedMaxSession()}" />
    				<property name="exceptionIfMaximumExceeded" value="#{cap4jSessionServiceImpl.isRejectLoginMaxSession()}"/>
  				</bean>
  				<bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>
  				<bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
    				<constructor-arg ref="sessionRegistry"/>
    			</bean>
			</list>
		</constructor-arg>
	</bean>
	<!-- bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" / -->
	<bean id="sessionRegistry"
		class="com.cib.cap4j.core.security.session.Cap4jSessionRegistryImpl">
		<property name="sessionService" ref="cap4jSessionServiceImpl"/>
	</bean>
	<bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/login/main.do"/>
	</bean>
</beans>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	http://www.springframework.org/schema/jee      http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


    <!-- mysql database -->
    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" id="dataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="autoCommitOnClose" value="false"/>
        <property name="checkoutTimeout" value="50000"/>
        <property name="initialPoolSize" value="2"/>
        <property name="minPoolSize" value="1"/>
        <property name="maxPoolSize" value="6"/>
        <property name="maxIdleTime" value="25200"/>
        <property name="acquireIncrement" value="5"/>
        <property name="maxIdleTimeExcessConnections" value="1800"/>
    </bean>
    
        
    <bean class="com.cib.cap4j.pec.monitor.ext.connection.DataSourceWrapper" id="dataSourceWapper">
        <property name="targetDataSource" ref="dataSource"/>
        <property name="dataSourceName" value="wade"/>
    </bean>
    <!-- MyBatis SqlSessionFactory配置 -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <property name="dataSource" ref="dataSourceWapper"/>
        <property name="mapperLocations" value="classpath*:config/mybatis/**/*.sqlmap.xml"/>
        <property name="plugins" ref="paginationInterceptor"/>
    </bean>
    
    <!-- Informix -->
    <!-- <bean class="com.cib.cap4j.core.base.dao.InformixPaginationInterceptor" id="paginationInterceptor"/> -->
    <!-- oracle -->
    <!-- <bean id="paginationInterceptor" class="com.cib.cap4j.core.base.dao.OraclePaginationInterceptor"/> -->
    <!-- mysql -->
    <bean class="com.cib.cap4j.core.base.dao.MySqlPaginationInterceptor" id="paginationInterceptor"/>
    
    
    <!-- Hibernate4.3.0.final配置 -->
    <bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
        <property name="dataSource" ref="dataSourceWapper"/>
        <property name="mappingLocations">
            <list>
                <value>classpath*:/config/hibernate/**/*.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
            	<!-- Informix -->
                <!-- <prop key="hibernate.dialect">org.hibernate.dialect.InformixDialect</prop> -->
                <!-- oracle -->
                <!-- <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop> -->
                <!-- mysql -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.cib.cap4j.cfn.**.vo</value>
                <value>com.yumu.**.vo</value>
            </list>
        </property>
    </bean>
    <!-- JdbcTemplate配置 -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" ref="dataSourceWapper"/>
    </bean>
    
    <!-- 事务控制管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<aop:aspectj-autoproxy expose-proxy="true"/>
	
	<!-- spring声明式事务的配置，以下为spring的AOP事务管理的增强部分 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	    <!-- 需要由交给spring的aop来进行代理的方法的集合，如果应用有自己的方法需有由spring来进行事务控制必须添加方法-->
	        <tx:method name="save*" propagation="REQUIRED" />
	        <tx:method name="add*" propagation="REQUIRED" />
	        <tx:method name="create*" propagation="REQUIRED" />
	        <tx:method name="insert*" propagation="REQUIRED" />
	        <tx:method name="ins*" propagation="REQUIRED" />
	        <tx:method name="update*" propagation="REQUIRED" />
	        <tx:method name="upd*" propagation="REQUIRED" />
	        <tx:method name="merge*" propagation="REQUIRED" />
	        <tx:method name="delete*" propagation="REQUIRED" />
	        <tx:method name="del*" propagation="REQUIRED" />
	        <tx:method name="remove*" propagation="REQUIRED" />
	        <tx:method name="put*" propagation="REQUIRED" />
	        <tx:method name="use*" propagation="REQUIRED"/>
	        <tx:method name="restart*" propagation="REQUIRED"/>
	        <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->  
	        <tx:method name="get*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="count*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="find*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="list*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="query*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="*" read-only="true" />
	    </tx:attributes>
	</tx:advice>
    <!--Spring采用AOP进行事务控制,这里指定了业务逻辑层所有类的方法需要按txAdvice中配置的策略进行事务控制 -->	
	<aop:config expose-proxy="true">
		<aop:pointcut id="txPointcut" expression="execution(* com.cib..service..*.*(..)) || execution(* com.yumu..service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
    
</beans>
